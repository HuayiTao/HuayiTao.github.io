{"version":3,"file":"component---src-pages-project-01-cs-js-bcdee28c7c2809c47ae7.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/project01/cs.js"],"sourcesContent":["import React from \"react\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport jsonData from './cs-2019.json'\r\nimport { Button, Table, Modal, Form } from 'react-bootstrap'\r\nimport { useLocalStorage } from \"react-use\"\r\n\r\n\r\nexport default function CSPage() {\r\n  let [course, setCourse] = React.useState([])\r\n  let [courseInfo, setCourseInfo] = React.useState(\"\")\r\n  let [grade, setGrade] = React.useState(\"\")\r\n\r\n  let [Semester, setCreateSemester] = useLocalStorage(\"SemesterCS\", [])\r\n  let [totalGpa, setTotalGpa] = useLocalStorage(\"totalGpaCS\", 0)\r\n  let [totalCourse, setTotalCourse] = useLocalStorage(\"totalCourseCS\", 0)\r\n  let [gradeList, setGrageList] = useLocalStorage(\"gradeListCS\", [])\r\n  let [gpa, setGpa] = useLocalStorage(\"gpaListCS\", [])\r\n\r\n  const [currentSemester, setCurrentSemester] = React.useState(\"\");\r\n  const [show, setShow] = React.useState(false);\r\n  const handleClose = () => setShow(false)\r\n\r\n  const handleShow = Course => {\r\n    setShow(true);\r\n    setCourseInfo(Course.target.value)\r\n  }\r\n\r\n  function createSemester() {\r\n    Semester.push(Semester.length + 1)\r\n    setCreateSemester([...Semester])\r\n    console.table(Semester)\r\n  }\r\n\r\n\r\n  function clearSemester() {\r\n    setCreateSemester([])\r\n    setGrageList([])\r\n    setTotalCourse(0)\r\n    setTotalGpa(0)\r\n    setGpa([])\r\n    console.table(Semester)\r\n  }\r\n\r\n  function AddToSemester() {\r\n    let p = grade\r\n    console.log(p)\r\n    let g = \"\"\r\n\r\n    if (p == \"4\") {\r\n      g = \"A\"\r\n    }\r\n    if (p == \"3.75\") {\r\n      g = \"A-\"\r\n    }\r\n    if (p == \"3.25\") {\r\n      g = \"B+\"\r\n    }\r\n    if (p == \"3\") {\r\n      g = \"B\"\r\n    }\r\n    if (p == \"2.75\") {\r\n      g = \"B-\"\r\n    }\r\n    if (p == \"2.25\") {\r\n      g = \"C+\"\r\n    }\r\n    if (p == \"2\") {\r\n      g = \"C\"\r\n    }\r\n    if (p == \"1.75\") {\r\n      g = \"C-\"\r\n    }\r\n    if (p == \"1\") {\r\n      g = \"D\"\r\n    }\r\n    if (p == \"0\") {\r\n      g = \"F\"\r\n    }\r\n    if (p == \"excluded\") {\r\n      g = \"W\"\r\n    }\r\n    if (grade && currentSemester) {\r\n      gradeList.push({\r\n        semester: currentSemester,\r\n        course: courseInfo,\r\n        grade: g,\r\n        point: grade,\r\n      })\r\n      setGrade(\"\")\r\n      setCurrentSemester(\"\")\r\n      setTotalCourse(totalCourse + 1)\r\n      setGrageList([...gradeList])\r\n      setShow(false)\r\n    }\r\n\r\n    let TotalGpa = 0\r\n    let TotalCourse = 0\r\n    for (let i = 1; i <= Semester.length; i++) {\r\n      let semesterGpa = 0\r\n      let semesterCourse = 0\r\n\r\n      {\r\n        gradeList\r\n          .filter(s => s.semester == i)\r\n          .map(s => {\r\n            if (s.rating == \"W\") {\r\n              semesterGpa = semesterGpa\r\n              TotalGpa = TotalGpa\r\n              semesterCourse = semesterCourse\r\n            } else {\r\n              semesterGpa += s.point * 1 * 3\r\n              TotalGpa += s.point * 1 * 3\r\n              semesterCourse++\r\n              TotalCourse++\r\n            }\r\n          })\r\n      }\r\n      semesterGpa = semesterGpa / (semesterCourse * 3)\r\n\r\n      gpa[i - 1] = semesterGpa.toFixed(2)\r\n      setGpa([...gpa])\r\n      setTotalGpa(TotalGpa)\r\n      setTotalCourse(TotalCourse)\r\n    }\r\n  }\r\n\r\n\r\n  React.useEffect(async () => {\r\n    let items = []\r\n    for (let i = 0; i < jsonData.curriculum.subjects.length; i++) {\r\n      items.push(\r\n        <tr>\r\n          <td>{jsonData.curriculum.subjects[i].groupName}</td>\r\n          <td></td>\r\n          <td></td>\r\n        </tr>\r\n      )\r\n      for (let t = 0; t < jsonData.curriculum.subjects[i].subjects.length; t++) {\r\n        var courseC = jsonData.curriculum.subjects[i].subjects[t].code\r\n        var courseN = jsonData.curriculum.subjects[i].subjects[t].name\r\n        var courseInfo = courseC + \" \" + courseN\r\n\r\n        items.push(\r\n          <tr>\r\n            <td>{courseC}</td>\r\n            <td>{courseN}</td>\r\n            <td><Button variant='warning' onClick={handleShow} value={courseInfo}>+</Button></td>\r\n          </tr>\r\n        )\r\n      }\r\n      setCourse(items)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          float: 'right',\r\n          height: '100%',\r\n          width: '35%',\r\n          backgroundColor: '#F8F8FF',\r\n        }}\r\n      >\r\n        <div style={{ height: '30%', border: '1px', margin: '0 auto' }}>\r\n          <h3 style={{ marginTop: '10px', textAlign: 'center' }}>Grade Overview</h3>\r\n          <Button style={{ margin: '5px' }} onClick={createSemester}>Add</Button>\r\n          <Button variant=\"danger\" style={{ margin: '5px' }} onClick={clearSemester}>Clear</Button>\r\n          <h4 style={{ borderTop: '2px', textAlign: 'right' }}> GPA: {(totalGpa / (totalCourse * 3)).toFixed(2)}</h4>\r\n\r\n        </div>\r\n\r\n        <div style={{ padding: '1rem', height: '70%', width: '100%', overflow: 'auto', border: '1px' }}>\r\n          {Semester.map(item => {\r\n            let sem = []\r\n            let CourseGpa = []\r\n            sem.push(<th>Semester {item}</th>)\r\n            {\r\n              gradeList\r\n                .filter(s => s.semester == item)\r\n                .map(s => {\r\n                  CourseGpa.push(\r\n                    <tr>\r\n                      <td colSpan={2}>{s.course}</td>\r\n                      <td style={{ textAlign: \"right\" }}>{s.grade}</td>\r\n                    </tr>\r\n                  )\r\n                })\r\n            }\r\n            return (\r\n              <Table striped>\r\n                <thead>\r\n                  <tr>{sem}</tr>\r\n                </thead>\r\n                <tbody>\r\n                  {CourseGpa}\r\n                  <tr>\r\n                    <td colSpan={3} style={{ textAlign: \"right\", backgroundColor: '#ADD8E6' }}>\r\n                      {gpa[item - 1]}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n            )\r\n          })}\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          float: 'left',\r\n          height: '100%',\r\n          width: '65%',\r\n          borderLeft: '2px solid black',\r\n          backgroundColor: '#C0C0C0',\r\n          overflow: 'auto'\r\n        }}\r\n      >\r\n        <h1 style={{ textAlign: 'center', marginTop: '20px' }}>Computer Science</h1>\r\n        <Table>\r\n          <tbody>\r\n            {course}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{courseInfo}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Select Semester</Form.Label>\r\n              <Form.Select required placeholder=\"Select Semester\"\r\n                onChange={e => setCurrentSemester(e.target.value)}\r\n              >\r\n                <option selected disabled>Select..</option>\r\n                {Semester.map(item => {\r\n                  return (<option value={item}>Semester {item}</option>)\r\n                })}\r\n              </Form.Select>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Select Grade</Form.Label>\r\n              <Form.Select placeholder=\"Select Grade\"\r\n                onChange={e => setGrade(e.target.value)}\r\n              >\r\n                <option selected disabled>Select..</option>\r\n                <option value='4'>A</option>\r\n                <option value='3.75'>A-</option>\r\n                <option value='3.25'>B+</option>\r\n                <option value='3'>B</option>\r\n                <option value='2.75'>B-</option>\r\n                <option value='2.25'>C+</option>\r\n                <option value='2'>C</option>\r\n                <option value='1.75'>C-</option>\r\n                <option value='1'>D</option>\r\n                <option value='0'>F</option>\r\n                <option value='excluded'>W</option>\r\n              </Form.Select>\r\n            </Form.Group>\r\n          </Form>\r\n\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={AddToSemester}>\r\n            Add to Semester\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  )\r\n\r\n}   "],"names":["CSPage","course","setCourse","React","courseInfo","setCourseInfo","grade","setGrade","Semester","setCreateSemester","useLocalStorage","totalGpa","setTotalGpa","totalCourse","setTotalCourse","gradeList","setGrageList","gpa","setGpa","currentSemester","setCurrentSemester","show","setShow","handleClose","handleShow","Course","target","value","async","items","i","jsonData","push","groupName","t","subjects","length","courseC","code","courseN","name","Button","variant","onClick","style","float","height","width","backgroundColor","border","margin","marginTop","textAlign","console","table","borderTop","toFixed","padding","overflow","map","item","sem","CourseGpa","filter","s","semester","colSpan","Table","striped","borderLeft","Modal","onHide","closeButton","Form","className","required","placeholder","onChange","e","selected","disabled","p","log","g","point","TotalGpa","TotalCourse","semesterGpa","semesterCourse","rating"],"sourceRoot":""}